---
import { PUBLIC_SITE_DESCRIPTION, PUBLIC_SITE_TITLE } from 'server-constants'
import 'styles/blog.module.css'

export interface Props {
  title: string
  description: string
  image?: string
  path?: string | any
}

const { title, description, image, path } = Astro.props

const siteTitle = title ? title : PUBLIC_SITE_TITLE
const siteDesc = description ? description : PUBLIC_SITE_DESCRIPTION
const siteURL = new URL(path, Astro.site).toString()
const siteOGImage = new URL('/images/og-image.png', Astro.site)
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<meta name="generator" content={Astro.generator} />
<meta name="robots" content="max-image-preview:large" />

<!-- Primary Meta Tags -->
<title>{siteTitle}</title>
<meta name="title" content={siteTitle} />
<meta name="description" content={siteDesc} />
<link rel="canonical" href={siteURL} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={siteURL} />
<meta property="og:title" content={siteTitle} />
<meta property="og:description" content={siteDesc} />
<meta property="og:image" content={image || siteOGImage} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={siteURL} />
<meta property="twitter:title" content={siteTitle} />
<meta property="twitter:description" content={siteDesc} />
<meta property="twitter:image" content={image || siteOGImage} />

<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css"
  integrity="sha384-vKruj+a13U8yHIkAyGgK1J3ArTLzrFGBbBc0tDp4ad/EyewESeXE/Iv67Aj8gKZ0"
  crossorigin="anonymous"
/>

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme')
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark'
    }
    return 'light'
  })()

  if (theme === 'light') {
    document.documentElement.classList.remove('dark')
  } else {
    document.documentElement.classList.add('dark')
  }
</script>
